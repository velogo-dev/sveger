import { apiClient } from '../config';
{{if .HasTypes}}import * as Types from '../types';{{end}}

/**
 * @description {{.Description}}
 * @tags {{.Tags}}
 * @name {{.Name}}
 * @summary {{.Summary}}
 * @request {{.HttpMethod}}:{{.Path}}
 */
export async function {{.Name}}({{if .HasQueryParams}}
  query?: {
{{range .QueryParams}}    /** {{.Description}} */
    {{.Name}}?: {{.Type}};
{{end}}  },{{end}}{{if .HasPathParams}}{{range .PathParams}}
  {{.Name}}: {{.Type}},{{end}}{{end}}{{if .HasRequestBody}}
  data: {{.RequestBodyType}},{{end}}
): Promise<{{.ReturnType}}> {
{{if .HasQueryParams}}  const config: any = {};
  if (query) {
    config.params = {};
{{range .QueryParams}}    if (query.{{.Name}} !== undefined) {
      config.params['{{.Name}}'] = query.{{.Name}};
    }
{{end}}  }

{{end}}  const response = await apiClient.{{.Method}}(
    `{{.PathTemplate}}`{{if .HasPathParams}}{{range .PathParams}}.replace('{{`{`}}{{.Name}}{{`}`}}', String({{.Name}})){{end}}{{end}},{{if .HasRequestBody}}
    data,{{end}}{{if .HasQueryParams}}
    config,{{end}}
  );
  return response.data;
}